language: python

# Note: the `python: X.Y` is not actually used, as internally conda is used,
# which follows the `PYTHON=X.Y` var.
matrix:
  include:
    - python: 3.7  # => 3.7 no JIT; scooby
      env: PYTHON=3.7 NUMBA_DISABLE_JIT=1 INST="scooby"
    - python: 3.7  # => Will become 3.8 soon; no JIT; no scooby
      env: PYTHON=3.7 NUMBA_DISABLE_JIT=1 INST=""
    - python: 3.7  # => 3.7
      env: PYTHON=3.7 DEPLOY_PYPI=true INST=""
    - python: 3.7  # just linkcheck
      env: PYTHON=3.7 CHCKLNKS=true INST="sphinx numpydoc sphinx_rtd_theme sphinx_numfig"

jobs:
  allow_failures:  # env must be EXACTLY as env allowed to fail.
    - env: PYTHON=3.7 CHCKLNKS=true INST="sphinx numpydoc sphinx_rtd_theme sphinx_numfig"

install:
  - sudo apt-get update
  # We do this conditionally because it saves us some downloading if the
  # version is the same.
  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update --all
  # Useful for debugging any issues with conda
  - conda info -a

  # Install and activate environment, install packages
  - conda create -q -n tenv python=$PYTHON numpy scipy pytest pytest-cov numba
  - source activate tenv
  - conda install -c conda-forge empymod
  - pip install setuptools_scm coveralls pytest-flake8 $INST
  - python setup.py install

script:  # No pytest for linkcheck-run.
  - if [ "$CHCKLNKS" = true ]; then
        cd docs; make html -b linkcheck;
    else
        pytest --cov=emg3d --flake8;
    fi

after_success:
  - if [ "$NUMBA_DISABLE_JIT" == "1" ]; then coveralls; fi

deploy:
  provider: pypi
  user: "__token__"
  password:
    secure: NfAeFdL0r5E4+ReJsfedJY/n45GAJ/plgIhqkKIF3Nhi0UMdmJdKTMtHLiTjdbGpDMiVU1Mu9/LSXb1bj7J43RSCT9p8P2HEzr7vuMyXtCHYsyUcvvHb6YvxbdSstIPrQuTfVqQmIwkknrkom3I2rOXeCqbbaSkXLHft7GLW2WS+nYrDhNjYSpXllYvd5X4GWd6ZrmAS2OS19A5Fg3N81UWUfaEmvW4mkDgAfM+wdw6Ldb0+M1XML43/nZvA4ThDLP0SQQ3sgA9rFsFBYMI7k4hrdUozZnlDI2HQ8bkNZzImaomaW+AIVGS+42yi/f71Pi84C0RNFJH1w7o3NuPKKRfDJctNUvRtoKwIgdJem7mRlXlzRFeQ7naWah2crNXg5MRikpsRzkdxjjVQUImvno4fgafzrRxYSxa25NvNGEbuUuZ4K8NFnqdk7wCyeGGTcWRHzhsXuWzbwnAs2JqGiLYDKwSKdHf6QxyIlTnIoqfb2r0m7BcfnHmzwDAYxubEPo9XuWbY8e1locjWg80C15qKL4E3im5xodJW0I9ZDugrovk09d9qTfJexFUyaUBu9b89VDLIJImSICBKbXxaidwtOBpM84/fhhgjJGGr6zTPsSPZT9WJQ4dZYbBEHELParYUmbAoGgTC0JOLr/DM0DcZ9SwUqEd3DwsGP/k+ZmA=
  on:
    branch: master
    tags: true
    condition: '$DEPLOY_PYPI = "true"'
  distributions: "sdist bdist_wheel"
